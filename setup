#!/bin/bash

function echo_step_title() {
    local step_message=$1
    step_message="$STEP_NUMBER. $step_message"
    local message_length=${#step_message}
    local repeated_stars=$(head -c ${message_length} /dev/zero | tr '\0' '*')
    repeated_stars="$repeated_stars"
    echo ""
    echo "$repeated_stars"
    echo ${step_message}
    echo "$repeated_stars"
    STEP_NUMBER=$(($STEP_NUMBER + 1))
}

function echo_with_indentation() {
    local message=$1
    echo -e "   $message"
}

function echo_error_message () {
    local message=$1
    echo_with_indentation "\033[38;5;9m$message\033[0m"
}

function echo_recommendation_message() {
    local message=$1
    echo_with_indentation "\033[38;5;11m$message\033[0m"
}

function echo_success_message() {
    local message=$1
    echo_with_indentation "\033[38;5;2m$message\033[0m"
}


function clone_project(){
    # Cloning project
    echo_success_message "[*] Git cloning project"
    git clone https://github.com/mosesokemwa/super-duper-octo-testing.git
    echo_success_message "[*] Git cloning hacker-bay project complete."
}

function install_dependancies(){
    # Install project node_modules
    echo_success_message "[*] Installing project dependancies....."
    cd super-duper-octo-testing
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
    echo_success_message "[*] Dependancies installed" "success"
}

function running_test(){
    echo_success_message "[*] running tests without coverage"
    pytest
}

function main() {
    echo_step_title "super-duper-octo-testing"
    clone_project
    install_dependancies
    running_test
}
main
